{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport PollTypes from \"./pollTypes\";\nimport { v4 as uuidv4 } from 'uuid';\nimport useSocket from \"../../hooks/useSocket\";\nconst initialState = {\n  \"connected_role\": \"Owner\",\n  //\"Owner\", \"User\" , \"Respondent\"\n  \"poll_main_question\": \"What is the value of π ?\",\n  \"poll_question_options\": [{\n    id: 1,\n    answer: \"3.14\",\n    votes: 5\n  }, {\n    id: 2,\n    answer: \"3.15\",\n    votes: 5\n  }, {\n    id: 3,\n    answer: \"3.16\",\n    votes: 5\n  }]\n};\nconst resetState = {\n  \"connected_role\": \"Owner\",\n  //\"Owner\", \"User\" , \"Respondent\"\n  \"poll_main_question\": \"\",\n  \"poll_question_options\": [{\n    id: 1,\n    answer: \"\",\n    votes: 0\n  }, {\n    id: 2,\n    answer: \"\",\n    votes: 0\n  }]\n};\n\nconst PollReducer = function () {\n  _s();\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // use socket\n  const {\n    socket\n  } = useSocket();\n\n  switch (action.type) {\n    case PollTypes.REFRESH_POLL_DATA:\n      {\n        return action.payload;\n      }\n\n    case PollTypes.ADD_POLL:\n      {\n        return Object.assign({ ...state,\n          poll_question_options: [...state.poll_question_options, {\n            id: uuidv4(),\n            answer: action.payload,\n            votes: 0\n          }]\n        });\n      }\n\n    case PollTypes.RESET_POLL:\n      {\n        return resetState;\n      }\n\n    case PollTypes.UPDATE_QUESTION:\n      {\n        const newState = Object.assign({ ...state,\n          poll_main_question: action.payload\n        });\n        return newState;\n      }\n\n    case PollTypes.REMOVE_AN_ANSWER:\n      {\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.filter(poll => {\n          return poll.id != action.payload;\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    case PollTypes.UPDATE_SINGLE_ANSWER:\n      {\n        console.log(\"store =>\", action.payload.id, action.payload.answer);\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.map(poll => {\n          if (poll.id == action.payload.id) {\n            return Object.assign(poll, {\n              answer: action.payload.answer\n            });\n          } else {\n            return poll;\n          }\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    case PollTypes.VOTING:\n      {\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.map(poll => {\n          if (poll.id == action.payload) {\n            return Object.assign(poll, {\n              votes: poll.votes + 1\n            });\n          } else {\n            return poll;\n          }\n        }); // emit new result;\n        //socket.emit(\"new_result\",{\"poll_data\":Object.assign({...state, poll_question_options:new_poll_question_options})})\n\n        socket.emit(\"vote\", {\n          poll_data: \"hello\"\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\n_s(PollReducer, \"RormeJw1bFNCKjCFmunl1fyVlPs=\", false, function () {\n  return [useSocket];\n});\n\n_c = PollReducer;\nexport default PollReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollReducer\");","map":{"version":3,"names":["PollTypes","v4","uuidv4","useSocket","initialState","id","answer","votes","resetState","PollReducer","state","action","socket","type","REFRESH_POLL_DATA","payload","ADD_POLL","Object","assign","poll_question_options","RESET_POLL","UPDATE_QUESTION","newState","poll_main_question","REMOVE_AN_ANSWER","prev_state","new_poll_question_options","filter","poll","UPDATE_SINGLE_ANSWER","console","log","map","VOTING","emit","poll_data"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/store/Polls/pollReducer.tsx"],"sourcesContent":["import { IPoll, IPollQuestionOptions } from \"../../@types/poll.d\";\nimport PollTypes from \"./pollTypes\";\nimport { v4 as uuidv4 } from 'uuid';\nimport useSocket from \"../../hooks/useSocket\";\n\ntype TPayload = {\n    id:string ,\n    content:string\n}\n\ninterface IAction{\n    type:string,\n    payload: TPayload | string | number | any\n}\n\nconst initialState = {\n    \"connected_role\":\"Owner\", //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\":\"What is the value of π ?\",\n    \"poll_question_options\":[\n        {\n            id:1,\n            answer:\"3.14\",\n            votes:5\n        },\n        {\n            id:2,\n            answer:\"3.15\",\n            votes:5\n        },\n        {\n            id:3,\n            answer:\"3.16\",\n            votes:5\n        },\n    ]\n}\n\nconst resetState =  {\n    \"connected_role\":\"Owner\", //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\":\"\",\n    \"poll_question_options\":[\n        {\n            id:1,\n            answer:\"\",\n            votes:0\n        },\n        {\n            id:2,\n            answer:\"\",\n            votes:0\n        },\n    ]\n}\n\nconst PollReducer = (state=initialState,action:IAction ) =>{\n\n    // use socket\n    const {socket} = useSocket();\n\n    switch(action.type){\n\n        case PollTypes.REFRESH_POLL_DATA :{\n            return action.payload\n        }\n\n        case PollTypes.ADD_POLL :{\n            return Object.assign({...state, poll_question_options:[...state.poll_question_options,{\n                id:uuidv4(),\n                answer:action.payload,\n                votes:0\n            }]});\n        }\n\n        case PollTypes.RESET_POLL :{\n            return resetState;\n        }\n\n        case PollTypes.UPDATE_QUESTION :{\n            const newState = Object.assign({...state, poll_main_question:action.payload});\n            return newState;\n        }\n\n        case PollTypes.REMOVE_AN_ANSWER :{\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.filter((poll:IPollQuestionOptions)=>{\n                return poll.id != action.payload\n            });\n\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n\n        case PollTypes.UPDATE_SINGLE_ANSWER :{\n\n            console.log(\"store =>\",action.payload.id,action.payload.answer);\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.map((poll:IPollQuestionOptions)=>{\n                if(poll.id == action.payload.id){\n                   return Object.assign(poll,{answer:action.payload.answer});\n                 }else{\n                    return poll\n                 } \n            });\n\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n\n        case PollTypes.VOTING :{\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.map((poll:IPollQuestionOptions)=>{\n                if(poll.id == action.payload){\n                   return Object.assign(poll, {votes:(poll.votes + 1)});\n                 }else{\n                    return poll\n                 } \n            });\n\n            // emit new result;\n            //socket.emit(\"new_result\",{\"poll_data\":Object.assign({...state, poll_question_options:new_poll_question_options})})\n            socket.emit(\"vote\",{poll_data:\"hello\"});\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n    \n        default:{\n            return state;\n        }\n\n    }\n\n}\n\nexport default PollReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}