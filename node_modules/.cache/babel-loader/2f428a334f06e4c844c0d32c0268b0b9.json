{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as io from \"socket.io-client\";\nimport Header from './components/Header/Header';\nimport PollForm from './components/PollForm/PollForm';\nimport Poll from './components/Poll/Poll';\nimport PollResult from './components/PollResult/PollResult'; //import PollProvider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// connect from socket with back one\nconst socket = io.connect(\"http://localhost:3002\");\n\nfunction App() {\n  _s();\n\n  // State \n  const [message, setMessage] = useState();\n  const [newMessage, setNewMessage] = useState(); // send message\n\n  const sendMessage = () => {\n    socket.emit(\"vote\", {\n      \"message\": message\n    });\n    setMessage(\"\");\n  }; // Handle Socket on mount\n\n\n  useEffect(() => {\n    socket.on(\"new_result\", data => {\n      setNewMessage(data.message);\n    });\n  }, [socket]); //initial state\n\n  const Store = {\n    \"connected_role\": \"Owner\",\n    //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\": \"What is the value of π ?\",\n    \"poll_question_options\": [{\n      id: 1,\n      answer: \"3.14\",\n      votes: 0\n    }, {\n      id: 2,\n      answer: \"3.1416\",\n      votes: 0\n    }, {\n      id: 3,\n      answer: \"3.1415\",\n      votes: 0\n    }],\n    total_votes: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Sir Vote-a-lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Main\",\n        children: [/*#__PURE__*/_jsxDEV(PollForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Poll, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PollResult, {\n          title: \"What is the value of \\u03C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"u0MPdOGvy1jgd0r/o8Gw+7N3F+Y=\");\n\n_c = App;\nexport default App;\n/*\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","Header","PollForm","Poll","PollResult","socket","connect","App","message","setMessage","newMessage","setNewMessage","sendMessage","emit","on","data","Store","id","answer","votes","total_votes"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as io from \"socket.io-client\";\nimport Header from './components/Header/Header';\nimport PollForm from './components/PollForm/PollForm';\nimport Poll from './components/Poll/Poll';\nimport PollResult from './components/PollResult/PollResult';\n\n//import PollProvider\nimport { PollProvider , IPoll } from './PollContext';\n\n// connect from socket with back one\nconst socket = io.connect(\"http://localhost:3002\");\n\nfunction App() {\n\n  // State \n  const [message,setMessage] = useState<string>();\n  const [newMessage,setNewMessage] = useState<string>();\n\n  // send message\n  const sendMessage = () =>{\n    socket.emit(\"vote\",{\"message\":message});\n    setMessage(\"\");\n  }\n\n  // Handle Socket on mount\n  useEffect(()=>{\n    socket.on(\"new_result\",(data)=>{\n      setNewMessage(data.message)\n    });\n  },[socket]);\n\n  //initial state\n  const Store:IPoll = {\n    \"connected_role\":\"Owner\", //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\":\"What is the value of π ?\",\n    \"poll_question_options\":[\n      {\n        id:1,\n        answer:\"3.14\",\n        votes:0\n      },\n      {\n        id:2,\n        answer:\"3.1416\",\n        votes:0\n      },\n      {\n        id:3,\n        answer:\"3.1415\",\n        votes:0\n      }\n    ],\n    total_votes:0\n  }\n\n  return (\n    \n        <div className=\"App\">\n        <div className='container'>\n            <Header title=\"Sir Vote-a-lot\" />\n            <section className='Main'>\n            <PollForm/>\n            <Poll/>\n            <PollResult title='What is the value of π'/>\n            </section>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n\n/*\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CAEA;;;AAGA;AACA,MAAMC,MAAM,GAAGL,EAAE,CAACM,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,EAArC;EACA,MAAM,CAACW,UAAD,EAAYC,aAAZ,IAA6BZ,QAAQ,EAA3C,CAJa,CAMb;;EACA,MAAMa,WAAW,GAAG,MAAK;IACvBP,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAmB;MAAC,WAAUL;IAAX,CAAnB;IACAC,UAAU,CAAC,EAAD,CAAV;EACD,CAHD,CAPa,CAYb;;;EACAX,SAAS,CAAC,MAAI;IACZO,MAAM,CAACS,EAAP,CAAU,YAAV,EAAwBC,IAAD,IAAQ;MAC7BJ,aAAa,CAACI,IAAI,CAACP,OAAN,CAAb;IACD,CAFD;EAGD,CAJQ,EAIP,CAACH,MAAD,CAJO,CAAT,CAba,CAmBb;;EACA,MAAMW,KAAW,GAAG;IAClB,kBAAiB,OADC;IACQ;IAC1B,sBAAqB,0BAFH;IAGlB,yBAAwB,CACtB;MACEC,EAAE,EAAC,CADL;MAEEC,MAAM,EAAC,MAFT;MAGEC,KAAK,EAAC;IAHR,CADsB,EAMtB;MACEF,EAAE,EAAC,CADL;MAEEC,MAAM,EAAC,QAFT;MAGEC,KAAK,EAAC;IAHR,CANsB,EAWtB;MACEF,EAAE,EAAC,CADL;MAEEC,MAAM,EAAC,QAFT;MAGEC,KAAK,EAAC;IAHR,CAXsB,CAHN;IAoBlBC,WAAW,EAAC;EApBM,CAApB;EAuBA,oBAEM;IAAK,SAAS,EAAC,KAAf;IAAA,uBACA;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI,QAAC,MAAD;QAAQ,KAAK,EAAC;MAAd;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAS,SAAS,EAAC,MAAnB;QAAA,wBACA,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QADA,eAEA,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA,QAAC,UAAD;UAAY,KAAK,EAAC;QAAlB;UAAA;UAAA;UAAA;QAAA,QAHA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QAFN;AAaD;;GAxDQb,G;;KAAAA,G;AA0DT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}