{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\";\nimport { useSelector, useStore } from 'react-redux'; //import PollProvider\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollForm(props) {\n  _s();\n\n  // retreive needed data from Store\n  const poll_main_question = \"\";\n  const Poll = useSelector(state => state);\n  const store = useStore(); // Initiate states\n\n  const [newAnswer, setNewAnswer] = useState(poll_main_question);\n  const [quetion, setQuetion] = useState(\"\");\n  const [answerList, setAnswerList] = useState([{\n    id: 1,\n    answer: \"éé\",\n    votes: 1\n  }]); // Initiate states\n\n  const handleAnswerChange = event => {\n    setNewAnswer(event.target.value);\n  }; // handle question change\n\n\n  const handleQuestionChange = event => {\n    setQuetion(event.target.value);\n  }; // handle new answer \n\n\n  const handleSingleAnswerChange = (event, ind) => {};\n\n  useEffect(() => {\n    const Poll = store.getState();\n    console.log(Poll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: quetion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          style: {\n            width: \"calc(100% - 99px)\",\n            marginRight: \"15px\"\n          },\n          name: \"poll_question\",\n          placeholder: \"Type your question\",\n          defaultValue: quetion,\n          onChange: event => {\n            handleQuestionChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: answerList.map((poll, ind) => {\n            return /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n              children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                style: {\n                  width: \"calc(100% - 99px)\",\n                  marginRight: \"15px\"\n                },\n                name: \"poll_question\",\n                placeholder: \"Type an answer\",\n                onChange: event => {\n                  handleSingleAnswerChange(event, ind);\n                },\n                defaultValue: String(poll.answer)\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  \"width\": \"60px\",\n                  height: \"40px\"\n                },\n                text: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, poll.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            style: {\n              width: \"calc(100% - 99px)\",\n              marginRight: \"15px\"\n            },\n            onChange: handleAnswerChange,\n            name: \"poll_question\",\n            placeholder: \"Type an answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              \"width\": \"60px\",\n              height: \"40px\"\n            },\n            text: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          marginRight: \"15px\"\n        },\n        content: \"3/9 Possible answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"80px\",\n          height: \"40px\"\n        },\n        text: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollForm, \"RRImzJk6SxyaW9lrC6061POQV78=\", false, function () {\n  return [useSelector, useStore];\n});\n\n_c = PollForm;\nexport default PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"names":["React","useEffect","useState","Button","Label","LabelWithButton","TextInput","TextInputWithButton","useSelector","useStore","PollForm","props","poll_main_question","Poll","state","store","newAnswer","setNewAnswer","quetion","setQuetion","answerList","setAnswerList","id","answer","votes","handleAnswerChange","event","target","value","handleQuestionChange","handleSingleAnswerChange","ind","getState","console","log","width","marginRight","map","poll","String","height","minWidth"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx"],"sourcesContent":["import React, { useEffect, useState  } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\";\n\nimport { useSelector , useStore } from 'react-redux';\n\n\n//import PollProvider\nimport { IPoll, IPollQuestionOptions} from '../../@types/poll.d';\n\n\ninterface IProps{\n  children?: React.ReactNode,\n} \n\nfunction PollForm(props:IProps) {\n\n  // retreive needed data from Store\n  const poll_main_question = \"\";\n  const Poll =  useSelector<IPoll,IPoll>((state) => state);\n  const store = useStore();\n\n  \n  // Initiate states\n  const [newAnswer,setNewAnswer] =useState<string>(poll_main_question);\n  const [quetion,setQuetion] = useState<string>(\"\");\n  const [answerList,setAnswerList] = useState<IPollQuestionOptions[]>([{id:1,answer:\"éé\",votes:1}]);\n\n  // Initiate states\n  const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewAnswer(event.target.value);\n  };\n\n  // handle question change\n  const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuetion(event.target.value);\n  };\n\n  // handle new answer \n  const handleSingleAnswerChange = (event: React.ChangeEvent<HTMLInputElement> , ind : number) => {\n    \n  };\n\n  useEffect(()=>{\n    const Poll =  store.getState();\n    console.log(Poll)\n  },[]);\n  \n  return(\n\n    <section className='Section'>\n\n      <div className='SubSection'>\n\n        <div className='PollQuestionContainer'>\n\n          <p>{quetion}</p>\n\n          <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                     name=\"poll_question\" \n                     placeholder=\"Type your question\"\n                     defaultValue={quetion}\n                     onChange={(event)=>{handleQuestionChange(event)}}\n          />\n\n          <div className='PollQuestion'>\n\n              {\n                answerList.map((poll,ind)=>{\n                  return(\n                    <TextInputWithButton key={poll.id} >\n                      <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                                 key={ind} \n                                 name=\"poll_question\"\n                                 placeholder=\"Type an answer\"\n                                 onChange={(event) => {handleSingleAnswerChange(event,ind)}}\n                                 defaultValue={String(poll.answer)}\n                      />\n                      <Button style={{\"width\":\"60px\",height:\"40px\"}} text=\"X\"/>\n                    </TextInputWithButton>\n                  )\n                })\n              }\n\n          </div>\n\n          <TextInputWithButton>\n              <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                         onChange={handleAnswerChange}\n                         name=\"poll_question\" \n                         placeholder=\"Type an answer\"\n              />\n              <Button style={{\"width\":\"60px\",height:\"40px\"}} text=\"Add\"/>\n          </TextInputWithButton>\n\n        </div>\n      \n      </div>\n\n      <LabelWithButton>\n             <Label style={{marginRight:\"15px\"}} content={\"3/9 Possible answers\"}/>\n              <Button style={{minWidth:\"80px\",height:\"40px\"}} text=\"Reset\"/>\n      </LabelWithButton>\n\n    </section>\n  )\n}\n\n\nexport default PollForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}