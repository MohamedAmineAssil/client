{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip } from 'chart.js'; //import PollProvider\n\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJs\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, ChartDataLabels);\n\nfunction PollResult(props) {\n  _s();\n\n  // States \n  const [chartOptions, setChartOptions] = useState();\n  const [chartData, setChartData] = useState(object | undefined); // use Pollconsumer\n\n  const {\n    poll_question_options,\n    poll_main_question,\n    total_votes\n  } = PollConsumer(); // generate label array\n\n  const dynamicLabels = () => {\n    return poll_question_options.map((poll, ind) => {\n      return poll.answer;\n    });\n  };\n\n  useEffect(() => {\n    // ChartJs display options\n    setChartOptions({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Chart.js Bar Chart'\n        }\n      },\n      scales: {\n        y: {\n          grace: '5%'\n        }\n      }\n    }); // ChartJs display labels\n\n    const labels = dynamicLabels(); // ChartJs data\n\n    setChartData({\n      labels,\n      datasets: [{\n        label: poll_main_question,\n        data: [2, 5, 10],\n        //labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        backgroundColor: [\"red\", \"blue\", \"green\"],\n        datalabels: {\n          align: 'end',\n          anchor: 'end',\n          formatter: function (value, ctx) {\n            return value;\n          },\n          color: 'black',\n          font: {\n            size: 14,\n            weight: 500\n          }\n        }\n      }]\n    });\n  }, [chartOptions, chartData]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: poll_main_question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: chartOptions,\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          \"margin-right\": \"15px\"\n        },\n        content: `Total votes : ${total_votes}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollResult, \"dem4OUKNMyguLqAL5eLh66FVAWI=\");\n\n_c = PollResult;\nexport default PollResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResult\");","map":{"version":3,"names":["React","useEffect","useState","Label","LabelWithButton","Bar","ChartDataLabels","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","PollConsumer","register","PollResult","props","chartOptions","setChartOptions","chartData","setChartData","object","undefined","poll_question_options","poll_main_question","total_votes","dynamicLabels","map","poll","ind","answer","responsive","plugins","legend","position","title","display","text","scales","y","grace","labels","datasets","label","data","backgroundColor","datalabels","align","anchor","formatter","value","ctx","color","font","size","weight"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip\n} from 'chart.js';\n\n\n//import PollProvider\nimport { IPollQuestionOptions} from '../../contexts/pollContext/PollProvider';\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\n\n\ninterface IProps{}\n\n// Register ChartJs\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  ChartDataLabels\n);\n\nfunction PollResult(props:IProps) {\n\n\n  // States \n  const [chartOptions,setChartOptions] = useState<object>();\n  const [chartData,setChartData] = useState<object | undefined>(object | undefined);\n\n  // use Pollconsumer\n  const {poll_question_options,poll_main_question,total_votes} =  PollConsumer();\n\n  // generate label array\n  const dynamicLabels = () =>{\n    return(poll_question_options.map((poll,ind)=>{\n        return poll.answer;\n    }));\n  }\n\n  useEffect(()=>{\n\n      // ChartJs display options\n      setChartOptions({\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top' as const,\n          },\n          title: {\n            display: true,\n            text: 'Chart.js Bar Chart',\n          },\n        },\n        scales: {\n            y: {\n              grace: '5%'\n            }\n        }\n      });\n\n      // ChartJs display labels\n      const labels = dynamicLabels();\n    \n      // ChartJs data\n      setChartData({\n        labels,\n        datasets: [\n          {\n            label: poll_main_question,\n            data: [2, 5, 10 ] ,//labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n            backgroundColor: [\"red\", \"blue\", \"green\"],\n            datalabels: {\n              align: 'end' as const,\n              anchor: 'end' as const,\n              formatter: function(value:string, ctx:object) {\n                  return value;\n              },\n              color:'black',\n              font:{\n                  size: 14,\n                  weight:500\n              }\n            }\n          }\n        ]\n      })\n\n  },[chartOptions,chartData])\n\n  return (\n    <section className='Section'>\n\n      <div className='SubSection SubSectionCenter'>\n\n        <h1>{poll_main_question}</h1>\n\n        <div className='PollQuestionContainer'>\n\n          <div className='PollQuestion'>\n             <Bar options={chartOptions} data={chartData} />\n          </div>\n\n          </div>\n\n      </div>\n\n      <LabelWithButton style={{}}>\n             <Label style={{\"margin-right\":\"15px\"}} content={`Total votes : ${total_votes}`}/>\n      </LabelWithButton>\n\n    </section>\n  )\n}\n\nexport default PollResult"],"mappings":"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"},"metadata":{},"sourceType":"module"}