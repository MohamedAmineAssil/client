{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { useSelector } from 'react-redux';\nimport Store from '../../store/Store';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip } from 'chart.js';\nimport Empty from '../FormInput/Empty/Empty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJs\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, ChartDataLabels);\n\nconst PollResult = props => {\n  _s();\n\n  const [pollQuestionOptions, setPollQuestionOptions] = useState([]);\n  const [pollMainQuestion, setPollMainQuestion] = useState(\"\");\n  const question = useSelector(state => state.poll_main_question);\n  useEffect(() => {\n    const poll = Store.getState().Poll;\n    setPollQuestionOptions(poll.poll_question_options);\n    setPollMainQuestion(poll.poll_main_question);\n  }, [question]); // generate label array\n\n  const dynamicLabels = () => {\n    return pollQuestionOptions.map((poll, ind) => {\n      return poll.answer;\n    });\n  }; // generate vote rates array\n\n\n  const dynamicVotes = () => {\n    return pollQuestionOptions.map((poll, ind) => {\n      return poll.votes;\n    });\n  }; // generate vote rates array\n\n\n  const totalVotes = () => {\n    return pollQuestionOptions.reduce((acc, poll) => {\n      return acc + poll.votes;\n    }, 0);\n  }; // ChartJs display options\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart'\n      }\n    },\n    scales: {\n      y: {\n        grace: '5%'\n      }\n    }\n  }; // ChartJs display labels\n\n  const labels = dynamicLabels(); // ChartJs data\n\n  const data = {\n    labels,\n    datasets: [{\n      data: dynamicVotes(),\n      backgroundColor: [\"red\", \"blue\", \"green\"],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n        formatter: function (value, ctx) {\n          return value;\n        },\n        color: 'black',\n        font: {\n          size: 14,\n          weight: 500\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [pollQuestionOptions.length < 3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        imgSrc: \"./icons/emptyChart.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pollMainQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: options,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), pollQuestionOptions.length >= 3 && /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          marginRight: \"15px\"\n        },\n        content: `Total votes : ${totalVotes()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PollResult, \"cGiMTM/LJpaKezimneFFiJiPe4A=\", false, function () {\n  return [useSelector];\n});\n\n_c = PollResult;\nexport default PollResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResult\");","map":{"version":3,"names":["React","useState","useEffect","Label","LabelWithButton","Bar","ChartDataLabels","useSelector","Store","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Empty","register","PollResult","props","pollQuestionOptions","setPollQuestionOptions","pollMainQuestion","setPollMainQuestion","question","state","poll_main_question","poll","getState","Poll","poll_question_options","dynamicLabels","map","ind","answer","dynamicVotes","votes","totalVotes","reduce","acc","options","responsive","plugins","legend","position","title","display","text","scales","y","grace","labels","data","datasets","backgroundColor","datalabels","align","anchor","formatter","value","ctx","color","font","size","weight","length","marginRight"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx"],"sourcesContent":["import React ,{ useState , useEffect } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport { useSelector} from 'react-redux';\n\nimport { IPoll } from '../../@types/poll.d';\nimport Store from '../../store/Store';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip\n} from 'chart.js';\nimport Empty from '../FormInput/Empty/Empty';\n\ninterface IProps{}\n\n// Register ChartJs\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  ChartDataLabels\n);\n\n\nconst PollResult = (props:IProps) => {\n\n  const [pollQuestionOptions,setPollQuestionOptions] = useState<IPoll[\"poll_question_options\"]>([]);\n  const [pollMainQuestion,setPollMainQuestion] = useState<string>(\"\");\n\n  const question = useSelector<IPoll,IPoll[\"poll_main_question\"]>((state)=>(state.poll_main_question));\n\n  useEffect(()=>{\n    const poll = Store.getState().Poll;\n    setPollQuestionOptions(poll.poll_question_options);\n    setPollMainQuestion(poll.poll_main_question);\n  },[question]);\n  // generate label array\n  const dynamicLabels = () =>{\n    return(pollQuestionOptions.map((poll,ind)=>{\n        return poll.answer;\n    }));\n  }\n\n  // generate vote rates array\n  const dynamicVotes = () =>{\n    return(pollQuestionOptions.map((poll,ind)=>{\n        return poll.votes;\n    }));\n  }\n\n  // generate vote rates array\n  const totalVotes = () =>{\n    return(pollQuestionOptions.reduce((acc,poll)=>{\n        return acc + poll.votes\n    },0));\n  }\n\n  // ChartJs display options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart',\n      },\n    },\n    scales: {\n        y: {\n          grace: '5%'\n        }\n    }\n  };\n\n  // ChartJs display labels\n  const labels = dynamicLabels();\n  \n  // ChartJs data\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: dynamicVotes(),\n        backgroundColor: [\"red\", \"blue\", \"green\"],\n        datalabels: {\n          align: 'end' as const,\n          anchor: 'end' as const,\n          formatter: function(value:string, ctx:object) {\n              return value;\n          },\n          color:'black',\n          font:{\n              size: 14,\n              weight:500\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <section className='Section'>\n      { \n          pollQuestionOptions.length < 3  ?\n          <div className='SubSection SubSectionCenter'>\n                <Empty imgSrc={\"./icons/emptyChart.png\"} /> \n              </div>\n            : \n      \n          <div className='SubSection SubSectionCenter'>\n\n            <h1>{pollMainQuestion}</h1>\n\n            <div className='PollQuestionContainer'>\n\n              <div className='PollQuestion'>\n                <Bar options={options} data={data} />\n              </div>\n\n            </div>\n\n          </div>\n      }\n      {\n          pollQuestionOptions.length >= 3  &&  <LabelWithButton style={{}}>\n                <Label style={{marginRight:\"15px\"}} content={`Total votes : ${totalVotes()}`}/>\n          </LabelWithButton>\n      }\n      \n    </section>\n  )\n}\n\nexport default PollResult"],"mappings":"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"},"metadata":{},"sourceType":"module"}