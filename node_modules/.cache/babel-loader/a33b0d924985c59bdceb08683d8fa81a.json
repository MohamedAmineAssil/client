{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/PollApp/client/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as io from \"socket.io-client\";\nimport Header from './components/Header/Header'; // connect from socket with back one\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3002\");\n\nfunction App() {\n  _s();\n\n  // State \n  const [message, setMessage] = useState();\n  const [newMessage, setNewMessage] = useState(); // send message\n\n  const sendMessage = () => {\n    socket.emit(\"vote\", {\n      \"message\": message\n    });\n    setMessage(\"\");\n  }; // Handle Socket on mount\n\n\n  useEffect(() => {\n    socket.on(\"new_result\", data => {\n      setNewMessage(data.message);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Sir Vote-a-lot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"div 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"div 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"div 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u0MPdOGvy1jgd0r/o8Gw+7N3F+Y=\");\n\n_c = App;\nexport default App;\n/*\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","Header","socket","connect","App","message","setMessage","newMessage","setNewMessage","sendMessage","emit","on","data"],"sources":["/Users/amine/Documents/Practices/PollApp/client/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport * as io from \"socket.io-client\";\nimport Header from './components/Header/Header';\n\n// connect from socket with back one\nconst socket = io.connect(\"http://localhost:3002\");\n\nfunction App() {\n\n  // State \n  const [message,setMessage] = useState<string>();\n  const [newMessage,setNewMessage] = useState<string>();\n\n  // send message\n  const sendMessage = () =>{\n    socket.emit(\"vote\",{\"message\":message});\n    setMessage(\"\");\n  }\n\n  // Handle Socket on mount\n  useEffect(()=>{\n    socket.on(\"new_result\",(data)=>{\n      setNewMessage(data.message)\n    });\n  },[socket]);\n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n          <Header title=\"Sir Vote-a-lot\" />\n          <section className=''>\n            <div>\n              div 1\n            </div>\n            <div>\n              div 2\n            </div>\n            <div>\n              div 3\n            </div>\n          </section>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAEA;;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBP,QAAQ,EAArC;EACA,MAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA6BT,QAAQ,EAA3C,CAJa,CAMb;;EACA,MAAMU,WAAW,GAAG,MAAK;IACvBP,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAmB;MAAC,WAAUL;IAAX,CAAnB;IACAC,UAAU,CAAC,EAAD,CAAV;EACD,CAHD,CAPa,CAYb;;;EACAR,SAAS,CAAC,MAAI;IACZI,MAAM,CAACS,EAAP,CAAU,YAAV,EAAwBC,IAAD,IAAQ;MAC7BJ,aAAa,CAACI,IAAI,CAACP,OAAN,CAAb;IACD,CAFD;EAGD,CAJQ,EAIP,CAACH,MAAD,CAJO,CAAT;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACI,QAAC,MAAD;QAAQ,KAAK,EAAC;MAAd;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAS,SAAS,EAAC,EAAnB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAtCQE,G;;KAAAA,G;AAwCT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}