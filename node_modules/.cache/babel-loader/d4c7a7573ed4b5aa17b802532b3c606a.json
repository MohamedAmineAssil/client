{"ast":null,"code":"import PollTypes from \"./pollTypes\";\nexport const REFRESH_POLL_DATA_ACTION = pollData => {\n  return {\n    type: PollTypes.REFRESH_POLL_DATA,\n    payload: pollData\n  };\n};\n_c = REFRESH_POLL_DATA_ACTION;\nexport const ADD_POLL_ACTION = newAnswer => {\n  return {\n    type: PollTypes.ADD_POLL,\n    payload: newAnswer\n  };\n};\n_c2 = ADD_POLL_ACTION;\nexport const RESET_POLL_ACTION = () => {\n  return {\n    type: PollTypes.RESET_POLL\n  };\n};\n_c3 = RESET_POLL_ACTION;\nexport const UPDATE_QUESTION_ACTION = question => {\n  return {\n    type: PollTypes.UPDATE_QUESTION,\n    payload: question\n  };\n};\n_c4 = UPDATE_QUESTION_ACTION;\nexport const UPDATE_SINGLE_ANSWER_ACTION = (id, answer) => {\n  return {\n    type: PollTypes.UPDATE_SINGLE_ANSWER,\n    payload: {\n      id,\n      answer\n    }\n  };\n};\n_c5 = UPDATE_SINGLE_ANSWER_ACTION;\nexport const REMOVE_AN_ANSWER_ACTION = id => {\n  return {\n    type: PollTypes.REMOVE_AN_ANSWER,\n    payload: id\n  };\n};\n_c6 = REMOVE_AN_ANSWER_ACTION;\nexport const VOTING = id => {\n  return {\n    type: PollTypes.VOTING,\n    payload: id\n  };\n};\n_c7 = VOTING;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"REFRESH_POLL_DATA_ACTION\");\n$RefreshReg$(_c2, \"ADD_POLL_ACTION\");\n$RefreshReg$(_c3, \"RESET_POLL_ACTION\");\n$RefreshReg$(_c4, \"UPDATE_QUESTION_ACTION\");\n$RefreshReg$(_c5, \"UPDATE_SINGLE_ANSWER_ACTION\");\n$RefreshReg$(_c6, \"REMOVE_AN_ANSWER_ACTION\");\n$RefreshReg$(_c7, \"VOTING\");","map":{"version":3,"names":["PollTypes","REFRESH_POLL_DATA_ACTION","pollData","type","REFRESH_POLL_DATA","payload","ADD_POLL_ACTION","newAnswer","ADD_POLL","RESET_POLL_ACTION","RESET_POLL","UPDATE_QUESTION_ACTION","question","UPDATE_QUESTION","UPDATE_SINGLE_ANSWER_ACTION","id","answer","UPDATE_SINGLE_ANSWER","REMOVE_AN_ANSWER_ACTION","REMOVE_AN_ANSWER","VOTING"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/store/Polls/pollActions.tsx"],"sourcesContent":["import { IPoll } from \"../../@types/poll.d\";\nimport PollTypes from \"./pollTypes\";\n\nexport const REFRESH_POLL_DATA_ACTION = (pollData:IPoll)=>{\n    return {\n        type:PollTypes.REFRESH_POLL_DATA,\n        payload:pollData\n    }\n}\n\nexport const ADD_POLL_ACTION = (newAnswer:string)=>{\n    return {\n        type:PollTypes.ADD_POLL,\n        payload:newAnswer\n    }\n}\n\nexport const RESET_POLL_ACTION = ()=>{\n    return {\n        type:PollTypes.RESET_POLL\n    }\n}\n\nexport const UPDATE_QUESTION_ACTION = (question:string)=>{\n    return {\n        type:PollTypes.UPDATE_QUESTION,\n        payload:question\n    }\n}\n\nexport const UPDATE_SINGLE_ANSWER_ACTION = (id:string,answer:string)=>{\n    return {\n        type:PollTypes.UPDATE_SINGLE_ANSWER,\n        payload:{id,answer}\n    }\n}\n\nexport const REMOVE_AN_ANSWER_ACTION = (id:string)=>{\n    return {\n        type:PollTypes.REMOVE_AN_ANSWER,\n        payload:id\n    }\n}\n\nexport const VOTING = (id:string)=>{\n    return {\n        type:PollTypes.VOTING,\n        payload:id\n    }\n}"],"mappings":"AACA,OAAOA,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,wBAAwB,GAAIC,QAAD,IAAkB;EACtD,OAAO;IACHC,IAAI,EAACH,SAAS,CAACI,iBADZ;IAEHC,OAAO,EAACH;EAFL,CAAP;AAIH,CALM;KAAMD,wB;AAOb,OAAO,MAAMK,eAAe,GAAIC,SAAD,IAAoB;EAC/C,OAAO;IACHJ,IAAI,EAACH,SAAS,CAACQ,QADZ;IAEHH,OAAO,EAACE;EAFL,CAAP;AAIH,CALM;MAAMD,e;AAOb,OAAO,MAAMG,iBAAiB,GAAG,MAAI;EACjC,OAAO;IACHN,IAAI,EAACH,SAAS,CAACU;EADZ,CAAP;AAGH,CAJM;MAAMD,iB;AAMb,OAAO,MAAME,sBAAsB,GAAIC,QAAD,IAAmB;EACrD,OAAO;IACHT,IAAI,EAACH,SAAS,CAACa,eADZ;IAEHR,OAAO,EAACO;EAFL,CAAP;AAIH,CALM;MAAMD,sB;AAOb,OAAO,MAAMG,2BAA2B,GAAG,CAACC,EAAD,EAAWC,MAAX,KAA2B;EAClE,OAAO;IACHb,IAAI,EAACH,SAAS,CAACiB,oBADZ;IAEHZ,OAAO,EAAC;MAACU,EAAD;MAAIC;IAAJ;EAFL,CAAP;AAIH,CALM;MAAMF,2B;AAOb,OAAO,MAAMI,uBAAuB,GAAIH,EAAD,IAAa;EAChD,OAAO;IACHZ,IAAI,EAACH,SAAS,CAACmB,gBADZ;IAEHd,OAAO,EAACU;EAFL,CAAP;AAIH,CALM;MAAMG,uB;AAOb,OAAO,MAAME,MAAM,GAAIL,EAAD,IAAa;EAC/B,OAAO;IACHZ,IAAI,EAACH,SAAS,CAACoB,MADZ;IAEHf,OAAO,EAACU;EAFL,CAAP;AAIH,CALM;MAAMK,M"},"metadata":{},"sourceType":"module"}