{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx\";\nimport React from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip } from 'chart.js'; //import PollProvider\n\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJs\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, ChartDataLabels);\n\nfunction PollResult(props) {\n  // use Pollconsumer\n  const {\n    poll_question_options,\n    poll_main_question,\n    total_votes\n  } = PollConsumer(); // generate label array\n\n  const dynamicLabels = () => {\n    return poll_question_options.map((poll, ind) => {\n      return poll.answer;\n    });\n  }; // generate vote rates array\n\n\n  const dynamicVotes = () => {\n    return poll_question_options.map((poll, ind) => {\n      return poll.votes;\n    });\n  }; // generate vote rates array\n\n\n  const totalVotes = () => {\n    return poll_question_options.reduce((acc, poll) => {\n      return acc + poll.votes;\n    }, 0);\n  }; // ChartJs display options\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart'\n      }\n    },\n    scales: {\n      y: {\n        grace: '5%'\n      }\n    }\n  }; // ChartJs display labels\n\n  const labels = dynamicLabels(); // ChartJs data\n\n  const data = {\n    labels,\n    datasets: [{\n      label: poll_main_question,\n      data: dynamicVotes(),\n      backgroundColor: [\"red\", \"blue\", \"green\"],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n        formatter: function (value, ctx) {\n          return value;\n        },\n        color: 'black',\n        font: {\n          size: 14,\n          weight: 500\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: poll_main_question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: options,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          \"margin-right\": \"15px\"\n        },\n        content: `Total votes : ${totalVotes()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PollResult;\nexport default PollResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResult\");","map":{"version":3,"names":["React","Label","LabelWithButton","Bar","ChartDataLabels","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","PollConsumer","register","PollResult","props","poll_question_options","poll_main_question","total_votes","dynamicLabels","map","poll","ind","answer","dynamicVotes","votes","totalVotes","reduce","acc","options","responsive","plugins","legend","position","title","display","text","scales","y","grace","labels","data","datasets","label","backgroundColor","datalabels","align","anchor","formatter","value","ctx","color","font","size","weight"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx"],"sourcesContent":["import React from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip\n} from 'chart.js';\n\n\n//import PollProvider\nimport { IPollQuestionOptions} from '../../contexts/pollContext/PollProvider';\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\n\n\ninterface IProps{}\n\n// Register ChartJs\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  ChartDataLabels\n);\n\nfunction PollResult(props:IProps) {\n\n  // use Pollconsumer\n  const {poll_question_options,poll_main_question,total_votes} =  PollConsumer();\n\n  // generate label array\n  const dynamicLabels = () =>{\n    return(poll_question_options.map((poll,ind)=>{\n        return poll.answer;\n    }));\n  }\n\n  // generate vote rates array\n  const dynamicVotes = () =>{\n    return(poll_question_options.map((poll,ind)=>{\n        return poll.votes;\n    }));\n  }\n\n  // generate vote rates array\n  const totalVotes = () =>{\n    return(poll_question_options.reduce((acc,poll)=>{\n        return acc + poll.votes\n    },0));\n  }\n\n  // ChartJs display options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart',\n      },\n    },\n    scales: {\n        y: {\n          grace: '5%'\n        }\n    }\n  };\n\n  // ChartJs display labels\n  const labels = dynamicLabels();\n  \n  // ChartJs data\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: poll_main_question,\n        data: dynamicVotes(),\n        backgroundColor: [\"red\", \"blue\", \"green\"],\n        datalabels: {\n          align: 'end' as const,\n          anchor: 'end' as const,\n          formatter: function(value:string, ctx:object) {\n              return value;\n          },\n          color:'black',\n          font:{\n              size: 14,\n              weight:500\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <section className='Section'>\n\n      <div className='SubSection SubSectionCenter'>\n\n        <h1>{poll_main_question}</h1>\n\n        <div className='PollQuestionContainer'>\n\n          <div className='PollQuestion'>\n             <Bar options={options} data={data} />\n          </div>\n\n          </div>\n\n      </div>\n\n      <LabelWithButton style={{}}>\n             <Label style={{\"margin-right\":\"15px\"}} content={`Total votes : ${totalVotes()}`}/>\n      </LabelWithButton>\n\n    </section>\n  )\n}\n\nexport default PollResult"],"mappings":"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"},"metadata":{},"sourceType":"module"}