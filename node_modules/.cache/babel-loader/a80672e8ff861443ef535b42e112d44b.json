{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport Store from '../../store/Store';\nimport { ADD_POLL_ACTION, UPDATE_QUESTION_ACTION, REMOVE_AN_ANSWER_ACTION } from \"../../store/Polls/pollActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollForm(props) {\n  _s();\n\n  // Dipatcher \n  const dispatch = useDispatch(); // use Selector\n\n  const poll_ = useSelector(state => state); // retreive needed data from Store\n\n  const poll_main_question = \"\"; // Initiate states\n\n  const [newAnswer, setNewAnswer] = useState(poll_main_question);\n  const [quetion, setQuetion] = useState(\"\");\n  const [answerList, setAnswerList] = useState([]); // Initiate states\n\n  const handleAnswerChange = event => {\n    setNewAnswer(event.target.value);\n  }; // handle question change\n\n\n  const handleQuestionChange = event => {\n    setQuetion(event.target.value);\n    dispatch(UPDATE_QUESTION_ACTION(event.target.value));\n  }; // handle new answer \n\n\n  const handleSingleAnswerChange = (event, ind) => {};\n\n  useEffect(() => {\n    console.log(\"poll_ =>\", poll_);\n    const poll = Store.getState().Poll;\n    setQuetion(poll.poll_main_question);\n    setAnswerList(poll.poll_question_options);\n    console.log(\"Question =>\", poll.poll_main_question);\n  }, []); // handle click add\n\n  const addNewAnswer = () => {\n    dispatch(ADD_POLL_ACTION(newAnswer));\n    setNewAnswer(\"\");\n  }; //removeAnswer\n\n\n  const removeAnswer = id => {\n    if (answerList.length > 2) {\n      dispatch(REMOVE_AN_ANSWER_ACTION(id));\n    } else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          style: {\n            width: \"calc(100% - 99px)\",\n            marginRight: \"15px\"\n          },\n          name: \"poll_question\",\n          placeholder: \"Type your question\",\n          value: String(quetion),\n          onChange: event => {\n            handleQuestionChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: answerList.map((poll, ind) => {\n            return /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n              children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                style: {\n                  width: \"calc(100% - 99px)\",\n                  marginRight: \"15px\"\n                },\n                name: \"poll_question\",\n                placeholder: \"Type an answer\",\n                onChange: event => {\n                  handleSingleAnswerChange(event, ind);\n                },\n                defaultValue: String(poll.answer)\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  removeAnswer(String(poll.id));\n                },\n                style: {\n                  \"width\": \"60px\",\n                  height: \"40px\"\n                },\n                text: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this)]\n            }, poll.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            style: {\n              width: \"calc(100% - 99px)\",\n              marginRight: \"15px\"\n            },\n            onChange: handleAnswerChange,\n            name: \"poll_question\",\n            placeholder: \"Type an answer\",\n            value: newAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addNewAnswer,\n            style: {\n              \"width\": \"60px\",\n              height: \"40px\"\n            },\n            text: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          marginRight: \"15px\"\n        },\n        content: \"3/9 Possible answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"80px\",\n          height: \"40px\"\n        },\n        text: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollForm, \"gww01xRpfSGzd7qVgkkor5x8QQI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PollForm;\nexport default PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"names":["React","useEffect","useState","Button","Label","LabelWithButton","TextInput","TextInputWithButton","useSelector","useDispatch","Store","ADD_POLL_ACTION","UPDATE_QUESTION_ACTION","REMOVE_AN_ANSWER_ACTION","PollForm","props","dispatch","poll_","state","poll_main_question","newAnswer","setNewAnswer","quetion","setQuetion","answerList","setAnswerList","handleAnswerChange","event","target","value","handleQuestionChange","handleSingleAnswerChange","ind","console","log","poll","getState","Poll","poll_question_options","addNewAnswer","removeAnswer","id","length","width","marginRight","String","map","answer","height","minWidth"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx"],"sourcesContent":["import React, { useEffect, useState  } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\";\n\nimport { useSelector , useDispatch } from 'react-redux';\n\nimport { IPoll , IPollQuestionOptions} from '../../@types/poll.d';\nimport Store from '../../store/Store';\n\nimport { ADD_POLL_ACTION , UPDATE_QUESTION_ACTION , REMOVE_AN_ANSWER_ACTION } from \"../../store/Polls/pollActions\";\n\ninterface IProps{\n  children?: React.ReactNode,\n} \n\nfunction PollForm(props:IProps) {\n\n  // Dipatcher \n  const dispatch = useDispatch();\n\n  // use Selector\n\n  const poll_ = useSelector<IPoll,IPoll>((state)=>(state));\n\n  // retreive needed data from Store\n  const poll_main_question = \"\";\n  \n  // Initiate states\n  const [newAnswer,setNewAnswer] =useState<string>(poll_main_question);\n  const [quetion,setQuetion] = useState<string>(\"\");\n  const [answerList,setAnswerList] = useState<IPollQuestionOptions[]>([]);\n\n  // Initiate states\n  const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewAnswer(event.target.value);\n  };\n\n  // handle question change\n  const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuetion(event.target.value);\n    dispatch(UPDATE_QUESTION_ACTION(event.target.value));\n  };\n\n  // handle new answer \n  const handleSingleAnswerChange = (event: React.ChangeEvent<HTMLInputElement> , ind : number) => {\n  };\n\n  useEffect(()=>{\n    console.log(\"poll_ =>\",poll_);\n    const poll =  Store.getState().Poll;\n    setQuetion(poll.poll_main_question);\n    setAnswerList(poll.poll_question_options)\n    console.log(\"Question =>\",poll.poll_main_question);\n  },[]);\n\n  // handle click add\n  const addNewAnswer = () =>{\n      dispatch(ADD_POLL_ACTION(newAnswer));\n      setNewAnswer(\"\");\n  }\n\n  //removeAnswer\n  const removeAnswer = (id:string)=>{\n      if(answerList.length > 2){\n        dispatch(REMOVE_AN_ANSWER_ACTION(id));\n      }else{\n        \n      }\n  }\n\n  return(\n\n    <section className='Section'>\n\n      <div className='SubSection'>\n\n        <div className='PollQuestionContainer'>\n\n          <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                     name=\"poll_question\" \n                     placeholder=\"Type your question\"\n                     value={String(quetion)}\n                     onChange={(event)=>{handleQuestionChange(event)}}\n          />\n\n          <div className='PollQuestion'>\n              {\n                answerList.map((poll,ind)=>{\n                  return(\n                    <TextInputWithButton key={poll.id} >\n                      <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                                 key={ind} \n                                 name=\"poll_question\"\n                                 placeholder=\"Type an answer\"\n                                 onChange={(event) => {handleSingleAnswerChange(event,ind)}}\n                                 defaultValue={String(poll.answer)}\n                      />\n                      <Button onClick={()=>{removeAnswer(String(poll.id))}} style={{\"width\":\"60px\",height:\"40px\"}} text=\"X\"/>\n                    </TextInputWithButton>\n                  )\n                })\n              }\n\n          </div>\n\n          <TextInputWithButton>\n              <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                         onChange={handleAnswerChange}\n                         name=\"poll_question\" \n                         placeholder=\"Type an answer\"\n                         value={newAnswer}\n              />\n              <Button onClick={addNewAnswer} style={{\"width\":\"60px\",height:\"40px\"}} text=\"Add\"/>\n          </TextInputWithButton>\n\n        </div>\n      \n      </div>\n\n      <LabelWithButton>\n             <Label style={{marginRight:\"15px\"}} content={\"3/9 Possible answers\"}/>\n              <Button style={{minWidth:\"80px\",height:\"40px\"}} text=\"Reset\"/>\n      </LabelWithButton>\n\n    </section>\n  )\n}\n\n\nexport default PollForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}