{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { useSelector } from 'react-redux';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip } from 'chart.js';\nimport Empty from '../FormInput/Empty/Empty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Register ChartJs\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, ChartDataLabels);\n\nconst PollResult = props => {\n  _s();\n\n  // useSelectot\n  const {\n    poll_question_options,\n    poll_main_question,\n    connected_role\n  } = useSelector(state => state.Poll);\n  useEffect(() => {}, []); // generate label array\n\n  const dynamicLabels = () => {\n    return poll_question_options.map((poll, ind) => {\n      return poll.answer;\n    });\n  }; // generate vote rates array\n\n\n  const dynamicVotes = () => {\n    return poll_question_options.map((poll, ind) => {\n      return poll.votes;\n    });\n  }; // generate random colors\n\n\n  const randomColors = () => {\n    return poll_question_options.map((poll, ind) => {\n      return Math.floor(Math.random() * 16777215).toString(16);\n      ;\n    });\n  }; // generate vote rates array\n\n\n  const totalVotes = () => {\n    return poll_question_options.reduce((acc, poll) => {\n      return acc + poll.votes;\n    }, 0);\n  }; // ChartJs display options\n\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart'\n      }\n    },\n    scales: {\n      y: {\n        grace: '5%'\n      }\n    }\n  }; // ChartJs display labels\n\n  const labels = dynamicLabels(); // ChartJs data\n\n  const data = {\n    labels,\n    datasets: [{\n      data: dynamicVotes(),\n      backgroundColor: randomColors(),\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n        formatter: function (value, ctx) {\n          return value;\n        },\n        color: 'black',\n        font: {\n          size: 14,\n          weight: 500\n        }\n      }\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    style: connected_role == \"User\" ? {\n      maxWidth: \"600px\",\n      margin: \"0px auto\"\n    } : {},\n    children: [poll_question_options.length < 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        imgSrc: \"./icons/emptyChart.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection SubSectionCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: poll_main_question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: options,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this), poll_question_options.length >= 2 && /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          marginRight: \"15px\"\n        },\n        content: `Total votes : ${totalVotes()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PollResult, \"F3UFBJSg+5npOlxJU7wMaryWY+s=\", false, function () {\n  return [useSelector];\n});\n\n_c = PollResult;\nexport default PollResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollResult\");","map":{"version":3,"names":["React","useEffect","Label","LabelWithButton","Bar","ChartDataLabels","useSelector","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Empty","register","PollResult","props","poll_question_options","poll_main_question","connected_role","state","Poll","dynamicLabels","map","poll","ind","answer","dynamicVotes","votes","randomColors","Math","floor","random","toString","totalVotes","reduce","acc","options","responsive","plugins","legend","position","title","display","text","scales","y","grace","labels","data","datasets","backgroundColor","datalabels","align","anchor","formatter","value","ctx","color","font","size","weight","maxWidth","margin","length","marginRight"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollResult/PollResult.tsx"],"sourcesContent":["import React ,{ useState , useEffect } from 'react';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport { useSelector} from 'react-redux';\n\n\nimport { RootState } from '../../store/Store';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip\n} from 'chart.js';\nimport Empty from '../FormInput/Empty/Empty';\nimport { IPollQuestionOptions } from '../../@types/poll.d';\n\ninterface IProps{}\n\n// Register ChartJs\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  ChartDataLabels\n);\n\nconst PollResult = (props:IProps) => {\n\n  // useSelectot\n  const {poll_question_options, poll_main_question, connected_role} = useSelector((state:RootState) => (state.Poll));\n\n  useEffect(()=>{\n  },[]);\n\n  // generate label array\n  const dynamicLabels = () =>{\n    return(poll_question_options.map((poll:IPollQuestionOptions,ind:IPollQuestionOptions[\"id\"])=>{\n        return poll.answer;\n    }));\n  }\n\n  // generate vote rates array\n  const dynamicVotes = () =>{\n    return(poll_question_options.map((poll:IPollQuestionOptions,ind:IPollQuestionOptions[\"id\"])=>{\n        return poll.votes;\n    }));\n  }\n\n  // generate random colors\n  const randomColors = () =>{\n    return(poll_question_options.map((poll:IPollQuestionOptions,ind:IPollQuestionOptions[\"id\"])=>{\n        return  Math.floor(Math.random()*16777215).toString(16);;\n    }));\n  }\n\n \n\n  // generate vote rates array\n  const totalVotes = () =>{\n    return(poll_question_options.reduce((acc:number,poll:IPollQuestionOptions)=>{\n        return acc + poll.votes\n    },0));\n  }\n\n  // ChartJs display options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart',\n      },\n    },\n    scales: {\n        y: {\n          grace: '5%'\n        }\n    }\n  };\n\n  // ChartJs display labels\n  const labels = dynamicLabels();\n  \n  // ChartJs data\n  const data = {\n    labels,\n    datasets: [\n      {\n        data: dynamicVotes(),\n        backgroundColor: randomColors(),\n        datalabels: {\n          align: 'end' as const,\n          anchor: 'end' as const,\n          formatter: function(value:string, ctx:object) {\n              return value;\n          },\n          color:'black',\n          font:{\n              size: 14,\n              weight:500\n          }\n        }\n      }\n    ]\n  };\n\n  return (\n    <section className='Section' style={(connected_role == \"User\") ? {maxWidth:\"600px\",margin:\"0px auto\"} : {}}>\n      { \n          poll_question_options.length < 2 ?\n          <div className='SubSection SubSectionCenter'>\n                <Empty imgSrc={\"./icons/emptyChart.png\"} /> \n              </div>\n            : \n      \n          <div className='SubSection SubSectionCenter'>\n\n            <h1>{poll_main_question}</h1>\n\n            <div className='PollQuestionContainer'>\n\n              <div className='PollQuestion'>\n                <Bar options={options} data={data} />\n              </div>\n\n            </div>\n\n          </div>\n      }\n      {\n          poll_question_options.length >= 2  &&  <LabelWithButton style={{}}>\n                <Label style={{marginRight:\"15px\"}} content={`Total votes : ${totalVotes()}`}/>\n          </LabelWithButton>\n      }\n    </section>\n  )\n}\n\nexport default PollResult"],"mappings":"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"},"metadata":{},"sourceType":"module"}