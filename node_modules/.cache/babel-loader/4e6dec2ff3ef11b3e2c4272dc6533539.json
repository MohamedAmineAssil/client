{"ast":null,"code":"var _jsxFileName = \"/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\"; //import PollProvider\n\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PollForm(props) {\n  _s();\n\n  // use Pollconsumer\n  const {\n    poll_question_options,\n    poll_main_question,\n    setStore\n  } = PollConsumer(); // Initiate states\n\n  const [newAnswer, setNewAnswer] = useState(poll_main_question);\n  const [quetion, setQuetion] = useState(\"\");\n  const [answerList, setAnswerList] = useState(poll_question_options); // Initiate states\n\n  const handleAnswerChange = event => {\n    setNewAnswer(event.target.value);\n    console.log(event.target.value);\n  }; // handle question change\n\n\n  const handleQuestionChange = event => {\n    setQuetion(event.target.value);\n    console.log(event.target.value);\n  }; // handle new answer \n\n\n  const handleSingleAnswerChange = (event, ind) => {\n    console.log(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(\"changed\", newAnswer, quetion, answerList);\n  }, [newAnswer, quetion, answerList]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"Section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubSection\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PollQuestionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          style: {\n            width: \"calc(100% - 99px)\",\n            marginRight: \"15px\"\n          },\n          name: \"poll_question\",\n          placeholder: \"Type your question\",\n          defaultValue: newAnswer,\n          onChange: event => {\n            handleQuestionChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PollQuestion\",\n          children: answerList.map((poll, ind) => {\n            return /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n              children: [/*#__PURE__*/_jsxDEV(TextInput, {\n                style: {\n                  width: \"calc(100% - 99px)\",\n                  marginRight: \"15px\"\n                },\n                name: \"poll_question\",\n                placeholder: \"Type an answer\",\n                onChange: event => {\n                  handleSingleAnswerChange(event, ind);\n                },\n                defaultValue: String(poll.answer)\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  \"width\": \"60px\",\n                  height: \"40px\"\n                },\n                text: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)]\n            }, poll.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInputWithButton, {\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            style: {\n              width: \"calc(100% - 99px)\",\n              marginRight: \"15px\"\n            },\n            onChange: handleAnswerChange,\n            name: \"poll_question\",\n            placeholder: \"Type an answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              \"width\": \"60px\",\n              height: \"40px\"\n            },\n            text: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelWithButton, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          marginRight: \"15px\"\n        },\n        content: \"3/9 Possible answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"80px\",\n          height: \"40px\"\n        },\n        text: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollForm, \"G09Mf2Sv+5aOwIf3yHS9B24gqVQ=\");\n\n_c = PollForm;\nexport default PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"names":["React","useEffect","useState","Button","Label","LabelWithButton","TextInput","TextInputWithButton","PollConsumer","PollForm","props","poll_question_options","poll_main_question","setStore","newAnswer","setNewAnswer","quetion","setQuetion","answerList","setAnswerList","handleAnswerChange","event","target","value","console","log","handleQuestionChange","handleSingleAnswerChange","ind","width","marginRight","map","poll","String","answer","height","id","minWidth"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/components/PollForm/PollForm.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Button from '../FormInput/Button/Button';\nimport Label from '../FormInput/Label/Label';\nimport LabelWithButton from '../FormInput/LabelWithButton/LabelWithButton';\nimport TextInput from '../FormInput/TextInput/TextInput';\nimport TextInputWithButton from '../FormInput/TextInputWithButton/TextInputWithButton';\nimport \"./PollForm.css\";\n\n\n//import PollProvider\nimport { IPollQuestionOptions} from '../../contexts/pollContext/PollProvider';\nimport PollConsumer from '../../contexts/pollContext/PollConsumer';\n\n\ninterface IProps{\n  children?: React.ReactNode\n}\n\nfunction PollForm(props:IProps) {\n\n  // use Pollconsumer\n  const {poll_question_options, poll_main_question,setStore} =  PollConsumer();\n  \n  // Initiate states\n  const [newAnswer,setNewAnswer] =useState<string>(poll_main_question);\n  const [quetion,setQuetion] = useState<string>(\"\");\n  const [answerList,setAnswerList] = useState<IPollQuestionOptions[]>(poll_question_options);\n\n  // Initiate states\n  const handleAnswerChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewAnswer(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // handle question change\n  const handleQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuetion(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // handle new answer \n  const handleSingleAnswerChange = (event: React.ChangeEvent<HTMLInputElement> , ind : number) => {\n    console.log(event.target.value);\n  };\n\n  useEffect(()=>{\n    console.log(\"changed\",newAnswer,quetion,answerList)\n  },[newAnswer,quetion,answerList]);\n  \n  return(\n\n    <section className='Section'>\n\n      <div className='SubSection'>\n\n        <div className='PollQuestionContainer'>\n\n          <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                     name=\"poll_question\" \n                     placeholder=\"Type your question\"\n                     defaultValue={newAnswer}\n                     onChange={(event)=>{handleQuestionChange(event)}}\n          />\n\n          <div className='PollQuestion'>\n\n              {\n                answerList.map((poll,ind)=>{\n                  return(\n                    <TextInputWithButton key={poll.id} >\n                      <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                                 key={ind} \n                                 name=\"poll_question\"\n                                 placeholder=\"Type an answer\"\n                                 onChange={(event) => {handleSingleAnswerChange(event,ind)}}\n                                 defaultValue={String(poll.answer)}\n                      />\n                      <Button style={{\"width\":\"60px\",height:\"40px\"}} text=\"X\"/>\n                    </TextInputWithButton>\n                  )\n                })\n              }\n\n          </div>\n\n          <TextInputWithButton>\n              <TextInput style={{width:\"calc(100% - 99px)\",marginRight:\"15px\"}} \n                         onChange={handleAnswerChange}\n                         name=\"poll_question\" \n                         placeholder=\"Type an answer\"\n              />\n              <Button style={{\"width\":\"60px\",height:\"40px\"}} text=\"Add\"/>\n          </TextInputWithButton>\n\n        </div>\n      \n      </div>\n\n      <LabelWithButton>\n             <Label style={{marginRight:\"15px\"}} content={\"3/9 Possible answers\"}/>\n              <Button style={{minWidth:\"80px\",height:\"40px\"}} text=\"Reset\"/>\n      </LabelWithButton>\n\n    </section>\n  )\n}\n\nexport default PollForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}