{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import thunk from'redux-thunk';import RootReducer from'./RootReducer';var Store=createStore(RootReducer,composeWithDevTools(applyMiddleware(thunk)));export default Store;// Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"names":["createStore","applyMiddleware","composeWithDevTools","thunk","RootReducer","Store"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/store/Store.tsx"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport RootReducer from './RootReducer';\n\nconst Store = createStore(\n    RootReducer, \n    composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n);\n\nexport default Store;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof Store.getState>\nexport type AppDispatch = typeof Store.dispatch"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,MAAP,KAAkB,aAAlB,CACA,MAAOC,YAAP,KAAwB,eAAxB,CAEA,GAAMC,MAAK,CAAGL,WAAW,CACrBI,WADqB,CAErBF,mBAAmB,CACfD,eAAe,CAACE,KAAD,CADA,CAFE,CAAzB,CAOA,cAAeE,MAAf,CAEA"},"metadata":{},"sourceType":"module"}