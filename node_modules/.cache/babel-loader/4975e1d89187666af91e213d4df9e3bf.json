{"ast":null,"code":"import PollTypes from \"./pollTypes\";\nimport { v4 as uuidv4 } from 'uuid';\nconst initialState = {\n  \"connected_role\": \"Owner\",\n  //\"Owner\", \"User\" , \"Respondent\"\n  \"poll_main_question\": \"What is the value of π ?\",\n  \"poll_question_options\": [{\n    id: 1,\n    answer: \"3.14\",\n    votes: 5\n  }, {\n    id: 2,\n    answer: \"3.15\",\n    votes: 5\n  }, {\n    id: 3,\n    answer: \"3.16\",\n    votes: 5\n  }]\n};\nconst resetState = {\n  \"connected_role\": \"Owner\",\n  //\"Owner\", \"User\" , \"Respondent\"\n  \"poll_main_question\": \"\",\n  \"poll_question_options\": [{\n    id: 1,\n    answer: \"\",\n    votes: 0\n  }, {\n    id: 2,\n    answer: \"\",\n    votes: 0\n  }]\n};\n\nconst PollReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PollTypes.ADD_POLL:\n      {\n        return Object.assign({ ...state,\n          poll_question_options: [...state.poll_question_options, {\n            id: uuidv4(),\n            answer: action.payload,\n            votes: 0\n          }]\n        });\n      }\n\n    case PollTypes.RESET_POLL:\n      {\n        return resetState;\n      }\n\n    case PollTypes.UPDATE_QUESTION:\n      {\n        const newState = Object.assign({ ...state,\n          poll_main_question: action.payload\n        });\n        return newState;\n      }\n\n    case PollTypes.REMOVE_AN_ANSWER:\n      {\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.filter(poll => {\n          return poll.id != action.payload;\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    case PollTypes.UPDATE_SINGLE_ANSWER:\n      {\n        console.log(\"store =>\", action.payload.id, action.payload.answer);\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.map(poll => {\n          if (poll.id == action.payload.id) {\n            return Object.assign(poll, {\n              answer: action.payload.answer\n            });\n          } else {\n            return poll;\n          }\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    case PollTypes.VOTING:\n      {\n        const prev_state = Object.assign({ ...state\n        });\n        const new_poll_question_options = prev_state.poll_question_options.map(poll => {\n          if (poll.id == action.payload) {\n            return Object.assign(poll, {\n              votes: poll.votes + 1\n            });\n          } else {\n            return poll;\n          }\n        });\n        return Object.assign({ ...state,\n          poll_question_options: new_poll_question_options\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\n_c = PollReducer;\nexport default PollReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollReducer\");","map":{"version":3,"names":["PollTypes","v4","uuidv4","initialState","id","answer","votes","resetState","PollReducer","state","action","type","ADD_POLL","Object","assign","poll_question_options","payload","RESET_POLL","UPDATE_QUESTION","newState","poll_main_question","REMOVE_AN_ANSWER","prev_state","new_poll_question_options","filter","poll","UPDATE_SINGLE_ANSWER","console","log","map","VOTING"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/store/Polls/pollReducer.tsx"],"sourcesContent":["import { IPollQuestionOptions } from \"../../@types/poll.d\";\nimport PollTypes from \"./pollTypes\";\nimport { v4 as uuidv4 } from 'uuid';\n\ntype TPayload = {\n    id:string ,\n    content:string\n}\n\ninterface IAction{\n    type:string,\n    payload: TPayload | string | number | any\n}\n\nconst initialState = {\n    \"connected_role\":\"Owner\", //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\":\"What is the value of π ?\",\n    \"poll_question_options\":[\n        {\n            id:1,\n            answer:\"3.14\",\n            votes:5\n        },\n        {\n            id:2,\n            answer:\"3.15\",\n            votes:5\n        },\n        {\n            id:3,\n            answer:\"3.16\",\n            votes:5\n        },\n    ]\n}\n\nconst resetState =  {\n    \"connected_role\":\"Owner\", //\"Owner\", \"User\" , \"Respondent\"\n    \"poll_main_question\":\"\",\n    \"poll_question_options\":[\n        {\n            id:1,\n            answer:\"\",\n            votes:0\n        },\n        {\n            id:2,\n            answer:\"\",\n            votes:0\n        },\n    ]\n}\n\nconst PollReducer = (state=initialState,action:IAction ) =>{\n\n    switch(action.type){\n\n        case PollTypes.ADD_POLL :{\n            return Object.assign({...state, poll_question_options:[...state.poll_question_options,{\n                id:uuidv4(),\n                answer:action.payload,\n                votes:0\n            }]});\n        }\n\n        case PollTypes.RESET_POLL :{\n            return resetState;\n        }\n\n        case PollTypes.UPDATE_QUESTION :{\n            const newState = Object.assign({...state, poll_main_question:action.payload});\n            return newState;\n        }\n\n        case PollTypes.REMOVE_AN_ANSWER :{\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.filter((poll:IPollQuestionOptions)=>{\n                return poll.id != action.payload\n            });\n\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n\n        case PollTypes.UPDATE_SINGLE_ANSWER :{\n\n            console.log(\"store =>\",action.payload.id,action.payload.answer);\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.map((poll:IPollQuestionOptions)=>{\n                if(poll.id == action.payload.id){\n                   return Object.assign(poll,{answer:action.payload.answer});\n                 }else{\n                    return poll\n                 } \n            });\n\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n\n        case PollTypes.VOTING :{\n\n            const prev_state = Object.assign({...state});\n\n            const new_poll_question_options = prev_state.poll_question_options.map((poll:IPollQuestionOptions)=>{\n                if(poll.id == action.payload){\n                   return Object.assign(poll, {votes:(poll.votes + 1)});\n                 }else{\n                    return poll\n                 } \n            });\n\n            return Object.assign({...state, poll_question_options:new_poll_question_options});\n\n        }\n    \n        default:{\n            return state;\n        }\n\n    }\n\n}\n\nexport default PollReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}