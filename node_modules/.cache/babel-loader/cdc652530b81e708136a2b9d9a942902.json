{"ast":null,"code":"import React,{useEffect}from'react';import Header from'./components/Header/Header';import PollForm from'./components/PollForm/PollForm';import Poll from'./components/Poll/Poll';import PollResult from'./components/PollResult/PollResult';import'./App.css';import{REFRESH_POLL_DATA_ACTION}from'./store/Polls/pollActions';import{useDispatch}from'react-redux';import useSocket from'./hooks/useSocket';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// state\nvar _useSelector=useSelector(function(state){return state.Poll;}),connected_role=_useSelector.connected_role;// socket\nvar _useSocket=useSocket(),socket=_useSocket.socket;// dispatch\nvar dispatch=useDispatch();// handle socket\nuseEffect(function(){socket.on(\"new_result\",function(data){dispatch(REFRESH_POLL_DATA_ACTION(data));});},[socket]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{title:\"Sir Vote-a-lot\"}),/*#__PURE__*/_jsxs(\"section\",{className:\"Main\",children:[connected_role==\"Owner\"&&/*#__PURE__*/_jsx(PollForm,{}),connected_role==\"Respondent\"&&/*#__PURE__*/_jsx(Poll,{}),(connected_role==\"Owner\"||connected_role==\"User\"||connected_role==\"Respondent\")&&/*#__PURE__*/_jsx(PollResult,{})]})]})});}export default App;/*\n\n  // send message\n  const sendMessage = () =>{\n    socket.emit(\"vote\",{\"message\":message});\n    setMessage(\"\");\n  }\n\n  // Handle Socket on mount\n  useEffect(()=>{\n    socket.on(\"new_result\",(data)=>{\n      setNewMessage(data.message)\n    });\n  },[]); //socket\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/","map":{"version":3,"names":["React","useEffect","Header","PollForm","Poll","PollResult","REFRESH_POLL_DATA_ACTION","useDispatch","useSocket","useSelector","App","state","connected_role","socket","dispatch","on","data"],"sources":["/Users/amine/Documents/Practices/Sir_vote_a_lot/PollApp/client/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState} from 'react';\nimport Header from './components/Header/Header';\nimport PollForm from './components/PollForm/PollForm';\nimport Poll from './components/Poll/Poll';\nimport PollResult from './components/PollResult/PollResult';\n\nimport './App.css';\n\nimport { REFRESH_POLL_DATA_ACTION } from './store/Polls/pollActions';\nimport { useDispatch } from 'react-redux';\nimport useSocket from './hooks/useSocket';\nimport { useSelector } from 'react-redux';\nimport { RootState } from './store/Store';\n\nfunction App() {\n\n  // state\n  const {connected_role} =  useSelector((state:RootState)=>(state.Poll));\n\n  // socket\n  const {socket} = useSocket();\n  // dispatch\n  const dispatch = useDispatch();\n\n  // handle socket\n  useEffect(()=>{\n    socket.on(\"new_result\",(data)=>{\n      dispatch(REFRESH_POLL_DATA_ACTION(data));\n    });\n  },[socket]);\n\n  return (\n      <div className=\"App\">\n        <div className='container'>\n            <Header title=\"Sir Vote-a-lot\" />\n            <section className='Main'>\n            { (connected_role == \"Owner\") &&  <PollForm/> }\n            { (connected_role == \"Respondent\") &&  <Poll/>  }\n            { (connected_role == \"Owner\" || connected_role == \"User\" || connected_role == \"Respondent\") &&  <PollResult/> }\n            </section>\n        </div>\n      </div>\n  );\n\n}\n\nexport default App;\n\n/*\n\n  // send message\n  const sendMessage = () =>{\n    socket.emit(\"vote\",{\"message\":message});\n    setMessage(\"\");\n  }\n\n  // Handle Socket on mount\n  useEffect(()=>{\n    socket.on(\"new_result\",(data)=>{\n      setNewMessage(data.message)\n    });\n  },[]); //socket\n\n      <h1>Hello world</h1>\n      <input value={message} placeholder='Message' onChange={(event)=>{\n        setMessage(event.target.value)\n      }}/>\n      <button onClick={sendMessage}>Send</button>\n\n      <p>{newMessage}</p>\n\n*/"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAmD,OAAnD,CACA,MAAOC,OAAP,KAAmB,4BAAnB,CACA,MAAOC,SAAP,KAAqB,gCAArB,CACA,MAAOC,KAAP,KAAiB,wBAAjB,CACA,MAAOC,WAAP,KAAuB,oCAAvB,CAEA,MAAO,WAAP,CAEA,OAASC,wBAAT,KAAyC,2BAAzC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,UAAP,KAAsB,mBAAtB,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFAGA,QAASC,IAAT,EAAe,CAEb;AACA,iBAA0BD,WAAW,CAAC,SAACE,KAAD,QAAoBA,MAAK,CAACP,IAA1B,EAAD,CAArC,CAAOQ,cAAP,cAAOA,cAAP,CAEA;AACA,eAAiBJ,SAAS,EAA1B,CAAOK,MAAP,YAAOA,MAAP,CACA;AACA,GAAMC,SAAQ,CAAGP,WAAW,EAA5B,CAEA;AACAN,SAAS,CAAC,UAAI,CACZY,MAAM,CAACE,EAAP,CAAU,YAAV,CAAuB,SAACC,IAAD,CAAQ,CAC7BF,QAAQ,CAACR,wBAAwB,CAACU,IAAD,CAAzB,CAAR,CACD,CAFD,EAGD,CAJQ,CAIP,CAACH,MAAD,CAJO,CAAT,CAMA,mBACI,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,MAAD,EAAQ,KAAK,CAAC,gBAAd,EADJ,cAEI,iBAAS,SAAS,CAAC,MAAnB,WACGD,cAAc,EAAI,OAAnB,eAAgC,KAAC,QAAD,IADlC,CAEGA,cAAc,EAAI,YAAnB,eAAqC,KAAC,IAAD,IAFvC,CAGE,CAACA,cAAc,EAAI,OAAlB,EAA6BA,cAAc,EAAI,MAA/C,EAAyDA,cAAc,EAAI,YAA5E,gBAA8F,KAAC,UAAD,IAHhG,GAFJ,GADF,EADJ,CAaD,CAED,cAAeF,IAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}